{"version":3,"sources":["context/weatherContext.js","components/Time.jsx","components/CurrentWeather.jsx","utils/formulas.js","components/Loader.jsx","components/WeekDay.jsx","components/NextWeekWeather.jsx","components/Hour.jsx","components/HourlyWeather.jsx","components/Weather.jsx","context/weatherReduser.jsx","context/types.js","context/WeatherState.jsx","App.jsx","index.js"],"names":["weatherContext","createContext","Time","props","useState","Date","toLocaleTimeString","time","setTime","useEffect","setInterval","className","CurrentWeather","useContext","WeatherContext","myRef","useRef","entered","setEntered","weather","city","setCity","getWeather","submitCity","error","getIcon","localCity","localStorage","getItem","current","focus","Transition","in","timeout","state","style","display","alignItems","justifyContent","icon","temp","description","pressure","onSubmit","onChange","e","value","type","placeholder","ref","color","onClick","fromKelToCel","k","toFixed","Loader","WeekDay","days","map","day","index","key","dateDay","dayOfWeek","date","getDay","getUTCDate","NextWeek","setDays","isLoading","setIsLoading","coord","setHours","fetch","lat","lon","then","response","json","res","week","daily","i","id","dt","humidity","hourly","hour","fetchData","Hour","hours","HourlyWeather","ent","setEnt","filter","slice","setTimeout","Weather","action","payload","WeatherState","useReducer","weatherReduser","dispatch","Provider","width","src","alt","text","target","toLowerCase","hpa","data","name","main","setItem","catch","preventDefault","children","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8a39c20c.chunk.js","sourcesContent":["import {\r\n    createContext\r\n} from 'react'\r\n\r\nconst weatherContext = createContext()\r\n\r\nexport default weatherContext","import React, { useState, useEffect } from \"react\";\r\n\r\nconst Time = (props) => {\r\n  const [time, setTime] = useState(new Date().toLocaleTimeString());\r\n\r\n  useEffect(() => {\r\n    setInterval(() => {\r\n      setTime(new Date().toLocaleTimeString());\r\n    }, 1000);\r\n  });\r\n\r\n  return <h1 className=\"current-weather__time\">{time}</h1>;\r\n};\r\n\r\nexport default Time;\r\n","import React, { useContext, useRef, useEffect, useState } from \"react\";\r\nimport WeatherContext from \"../context/weatherContext\";\r\n\r\nimport { Transition } from \"react-transition-group\";\r\nimport Time from \"./Time\";\r\n\r\nconst CurrentWeather = () => {\r\n  const weatherContext = useContext(WeatherContext);\r\n  const myRef = useRef();\r\n  const [entered, setEntered] = useState(false);\r\n  const {\r\n    weather,\r\n    city,\r\n    setCity,\r\n    getWeather,\r\n    submitCity,\r\n    error,\r\n    getIcon,\r\n  } = weatherContext;\r\n\r\n  useEffect(() => {\r\n    const localCity = localStorage.getItem(\"city\");\r\n    myRef.current.focus();\r\n    localCity && getWeather(localCity);\r\n    setEntered(true);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return (\r\n    <Transition in={entered} timeout={300}>\r\n      {(state) => (\r\n        <div className={`current-weather blur ${state}`}>\r\n          <Time />\r\n\r\n          <h2\r\n            style={{\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"space-between\",\r\n            }}>\r\n            <p>{weather.city}</p>\r\n            {getIcon(weather.icon)}\r\n          </h2>\r\n          <p className=\"current-weather__temperature\">\r\n            Temperature: {weather.temp}\r\n          </p>\r\n\r\n          <hr />\r\n\r\n          <p className=\"current-weather__description\">{weather.description}</p>\r\n          <p className=\"current-weather__pressure\">\r\n            {\" \"}\r\n            Pressure: {weather.pressure}\r\n          </p>\r\n\r\n          <form className=\"current-weather__form\" onSubmit={submitCity}>\r\n            <input\r\n              className=\"form-input\"\r\n              onChange={(e) => setCity(e)}\r\n              value={city}\r\n              type=\"text\"\r\n              placeholder={\r\n                error ? \"Please type the right city name\" : \"Type the city name\"\r\n              }\r\n              ref={myRef}\r\n            />\r\n\r\n            {error && (\r\n              <p style={{ color: \"red\" }}>Please type the right city name</p>\r\n            )}\r\n\r\n            <button\r\n              className=\"form-btn\"\r\n              type=\"submit\"\r\n              onClick={() => getWeather(city)}>\r\n              search\r\n            </button>\r\n          </form>\r\n        </div>\r\n      )}\r\n    </Transition>\r\n  );\r\n};\r\n\r\nexport default CurrentWeather;\r\n","export function fromKelToCel(k) {\r\n  return (k - 273.15).toFixed(1);\r\n}\r\n\r\nexport function pressureToMmhg(hpa) {\r\n  return (hpa / 1.333).toFixed(0);\r\n}\r\n","import React from \"react\";\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <div className=\"spinner\">\r\n      <div className=\"cube1\"></div>\r\n      <div className=\"cube2\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import React from \"react\";\r\nimport { fromKelToCel } from \"../utils/formulas\";\r\nimport Loader from \"./Loader\";\r\n\r\nconst WeekDay = ({ days, getIcon }) => {\r\n  const dayOfWeek = (dateDay) => {\r\n    switch (dateDay) {\r\n      case 0:\r\n        return \"Sun\";\r\n      case 1:\r\n        return \"Mon\";\r\n      case 2:\r\n        return \"Tue\";\r\n      case 3:\r\n        return \"Wed\";\r\n      case 4:\r\n        return \"Thu\";\r\n      case 5:\r\n        return \"Fri\";\r\n      case 6:\r\n        return \"Sat\";\r\n\r\n      default:\r\n        return \"Day\";\r\n    }\r\n  };\r\n\r\n  const date = (day) => {\r\n    return new Date(day.date * 1000).getUTCDate();\r\n  };\r\n  const dateDay = (day) => {\r\n    return new Date(day.date * 1000).getDay();\r\n  };\r\n\r\n  if (!days) return <Loader />;\r\n  return (\r\n    <>\r\n      {days.map((day, index) => (\r\n        <div key={index} className=\"week-weather__day\">\r\n          <h4>\r\n            {dayOfWeek(dateDay(day))}:\r\n            <span className=\"day__number\"> {date(day)}</span>\r\n            <span className=\"day__descroption\">\r\n              {day.weather[0].description}\r\n            </span>\r\n          </h4>\r\n          <span\r\n            style={{\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"space-between\",\r\n            }}>\r\n            <p>Temp: {fromKelToCel(day.temp.day)}°C</p>\r\n            <span>{getIcon(day.weather[0].icon)}</span>\r\n          </span>\r\n        </div>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default WeekDay;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport WeekDay from \"./WeekDay\";\r\nimport WeatherContext from \"../context/weatherContext\";\r\nimport Loader from \"./Loader\";\r\nimport { Transition } from \"react-transition-group\";\r\n\r\nconst NextWeek = () => {\r\n  const [days, setDays] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [entered, setEntered] = useState(false);\r\n\r\n  const weatherContext = useContext(WeatherContext);\r\n\r\n  const {\r\n    weather: { coord },\r\n    setHours,\r\n    getIcon,\r\n  } = weatherContext;\r\n\r\n  useEffect(() => {\r\n    const fetchData = () => {\r\n      setIsLoading(true);\r\n      if (!coord) return;\r\n      return fetch(\r\n        `https://api.openweathermap.org/data/2.5/onecall?lat=${coord.lat}&lon=${coord.lon}&\r\n           exclude=hourly,daily&appid=4426de957ef37ff3fa22377c7667eb4d`\r\n      )\r\n        .then((response) => response.json())\r\n\r\n        .then((res) => {\r\n          const week = res.daily.map((day, i) => {\r\n            return {\r\n              id: i,\r\n              date: day.dt,\r\n              temp: day.temp,\r\n              humidity: day.humidity,\r\n              weather: day.weather,\r\n              pressure: day.pressure,\r\n            };\r\n          });\r\n          const hourly = res.hourly.map((hour, i) => {\r\n            return {\r\n              id: i,\r\n              date: hour.dt,\r\n              temp: hour.temp,\r\n              weather: hour.weather,\r\n            };\r\n          });\r\n          setHours(hourly);\r\n          setDays(week);\r\n\r\n          setIsLoading(false);\r\n          setEntered(true);\r\n        });\r\n    };\r\n\r\n    fetchData();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [coord]);\r\n\r\n  if (!coord) return null;\r\n  if (isLoading && coord) return <Loader />;\r\n  return (\r\n    <Transition in={entered} timeout={300}>\r\n      {(state) => (\r\n        <div className={`week-weather blur ${state}`}>\r\n          <WeekDay days={days} getIcon={getIcon} />\r\n        </div>\r\n      )}\r\n    </Transition>\r\n  );\r\n};\r\n\r\nexport default NextWeek;\r\n","import React from \"react\";\r\n\r\nconst Hour = ({ hours, getIcon }) => {\r\n  return (\r\n    <>\r\n      {hours.map((hour, index) => (\r\n        <div key={index} className=\"hourly-weather__hour\">\r\n          <span className=\"hour__time\">\r\n            <h4 className=\"hour__time_item\">{hour.time}</h4>\r\n            <span className=\"hour__time_item\">\r\n              {getIcon(hour.weather[0].icon)}\r\n            </span>\r\n          </span>\r\n          <p className=\"hour__temperature\">Temp: {hour.temp}°C</p>\r\n        </div>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Hour;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport Hour from \"./Hour\";\r\nimport { fromKelToCel } from \"../utils/formulas\";\r\nimport WeatherContext from \"../context/weatherContext\";\r\n\r\nimport { Transition } from \"react-transition-group\";\r\n\r\nconst HourlyWeather = () => {\r\n  const [hours, setHours] = useState();\r\n  const weatherContext = useContext(WeatherContext);\r\n  const [ent, setEnt] = useState(false);\r\n\r\n  const { hourly, getIcon } = weatherContext;\r\n\r\n  useEffect(() => {\r\n    if (hourly) {\r\n      const hours = hourly\r\n        .filter((hour) => hour.id <= 23)\r\n        .map((hour) => {\r\n          return {\r\n            temp: fromKelToCel(hour.temp),\r\n            weather: hour.weather,\r\n            time: new Date(hour.date * 1000).toLocaleTimeString().slice(0, -3),\r\n          };\r\n        });\r\n      setTimeout(() => {\r\n        setEnt(true);\r\n      }, 10);\r\n      setHours(hours);\r\n    } else {\r\n      return;\r\n    }\r\n  }, [hourly]);\r\n\r\n  if (!hours) return null;\r\n  return (\r\n    <Transition in={ent} timeout={1000}>\r\n      {(state) => (\r\n        <div className={`hourly-weather blur ${state}`}>\r\n          <Hour hours={hours} getIcon={getIcon} />\r\n        </div>\r\n      )}\r\n    </Transition>\r\n  );\r\n};\r\n\r\nexport default HourlyWeather;\r\n","import React from \"react\";\r\n\r\nimport CurrentWeather from \"./CurrentWeather\";\r\nimport NextWeek from \"./NextWeekWeather\";\r\nimport HourlyWeather from \"./HourlyWeather\";\r\n\r\nconst Weather = (props) => {\r\n  return (\r\n    <div className=\"container\">\r\n      <CurrentWeather />\r\n      <NextWeek />\r\n      <HourlyWeather />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Weather;\r\n","import {\r\n  GET_WEATHER,\r\n  SET_ERROR,\r\n  SET_CITY,\r\n  REMOVE_CITY,\r\n  REMOVE_ERROR,\r\n  SET_HOURS,\r\n} from \"./types\";\r\n\r\nexport default (state, action) => {\r\n  switch (action.type) {\r\n    case SET_CITY:\r\n      return { ...state, city: action.payload };\r\n\r\n    case REMOVE_CITY:\r\n      return { ...state, city: \"\" };\r\n\r\n    case GET_WEATHER:\r\n      return { ...state, weather: action.payload };\r\n\r\n    case SET_ERROR:\r\n      return { ...state, error: true };\r\n\r\n    case REMOVE_ERROR:\r\n      return { ...state, error: false };\r\n\r\n    case SET_HOURS:\r\n      return { ...state, hourly: action.payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const GET_WEATHER = 'GET_WEATHER'\r\nexport const SET_ERROR = 'SET_ERROR'\r\nexport const REMOVE_ERROR = 'REMOVE_ERROR'\r\nexport const SET_CITY = 'SET_CITY'\r\nexport const REMOVE_CITY = 'REMOVE_CITY'\r\nexport const SET_HOURS = 'SET_HOURS'","import React, { useReducer } from \"react\";\r\nimport WeatherContext from \"./weatherContext\";\r\nimport weatherReduser from \"./weatherReduser\";\r\nimport { fromKelToCel, pressureToMmhg } from \"../utils/formulas\";\r\n\r\nimport {\r\n  GET_WEATHER,\r\n  SET_ERROR,\r\n  REMOVE_ERROR,\r\n  SET_CITY,\r\n  REMOVE_CITY,\r\n  SET_HOURS,\r\n} from \"./types\";\r\n\r\nconst WeatherState = (props) => {\r\n  const initialState = {\r\n    city: \"\",\r\n    weather: {},\r\n    error: false,\r\n    hourly: null,\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(weatherReduser, initialState);\r\n\r\n  const getIcon = (icon) => {\r\n    return (\r\n      icon && (\r\n        <img\r\n          style={{ width: \"50px\" }}\r\n          src={`http://openweathermap.org/img/wn/${icon}@2x.png`}\r\n          alt=\"icon-weather\"\r\n        />\r\n      )\r\n    );\r\n  };\r\n\r\n  const setHours = (payload) => {\r\n    dispatch({ type: SET_HOURS, payload });\r\n  };\r\n\r\n  const setCity = ({ target }) => {\r\n    const text = target.value.toLowerCase();\r\n    dispatch({ type: SET_CITY, payload: text });\r\n  };\r\n\r\n  const submitCity = (e) => {\r\n    e.preventDefault();\r\n    dispatch({ type: REMOVE_CITY });\r\n    dispatch({ type: REMOVE_ERROR });\r\n  };\r\n\r\n  const getWeather = (city) => {\r\n    fetch(\r\n      `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=4426de957ef37ff3fa22377c7667eb4d`\r\n    )\r\n      .then((response) => response.json())\r\n      .then((res) => {\r\n        const data = {\r\n          city: res.name,\r\n          icon: res.weather[0].icon,\r\n          temp: fromKelToCel(res.main.temp),\r\n          pressure: pressureToMmhg(res.main.pressure),\r\n          coord: {\r\n            lat: res.coord.lat,\r\n            lon: res.coord.lon,\r\n          },\r\n          description: res.weather[0].description,\r\n        };\r\n        dispatch({ type: GET_WEATHER, payload: data });\r\n        localStorage.setItem(\"city\", city);\r\n      })\r\n      .catch((e) => dispatch({ type: SET_ERROR }));\r\n  };\r\n\r\n  return (\r\n    <WeatherContext.Provider\r\n      value={{\r\n        getIcon,\r\n        setHours,\r\n        setCity,\r\n        getWeather,\r\n        submitCity,\r\n        hourly: state.hourly,\r\n        city: state.city,\r\n        error: state.error,\r\n        weather: state.weather,\r\n      }}>\r\n      {props.children}\r\n    </WeatherContext.Provider>\r\n  );\r\n};\r\n\r\nexport default WeatherState;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport Weather from \"./components/Weather\";\r\n\r\nimport WeatherState from \"./context/WeatherState\";\r\n\r\nfunction App() {\r\n  return (\r\n    <WeatherState>\r\n      <Weather />\r\n    </WeatherState>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render( <\r\n  React.StrictMode >\r\n  <\r\n  App / >\r\n  <\r\n  /React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}